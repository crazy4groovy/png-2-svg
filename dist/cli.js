#!/usr/bin/env node
"use strict";var r={clobberFile:r=>"false"!==r,colors:Number,combineLines:r=>"true"===r,decimalPlaces:r=>"false"!==r,scale:Number,smooth:Number,tolerance:Number,vibrant:r=>"false"!==r,writeFileWithTag:String};const e=require("fs");var t=new function(){this.scan=async function(r,t){if(""===r||"/"===r)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==r.slice(-1)&&(r+="/"),!this.dirExists(r))return;const s=async r=>e.readdirSync(r).sort().reduce(async(e,n)=>{await e;const i=r+n;return this.dirExists(i)?s(i+"/"):t(i)},Promise.resolve());return s(r)},this.dirExists=function(r){try{return e.lstatSync(r).isDirectory()}catch(r){return!1}},this.fileExists=function(r){try{return e.existsSync(r)}catch(r){return!1}}};const s=require("fs"),n=require(".");!async function(){const e=process.argv.slice(2),[i,...c]=e;i||console.log("run: svg-thumbnailer {image-path} {options?}");const o=c.reduce((e,t)=>{const[s,n]=t.replace(/^--?/,"").split("=");return r[s]&&(e[s]=r[s](n)),e},{}),{writeFileWithTag:a,clobberFile:u}=o,l=async(r,e)=>{if(!e&&!r.match(/\.(jpe?g|png)$/i))return;if(a&&!1===u&&t.fileExists(`${r}.${a}`))return;const{data:i}=await n(r,o).catch(e=>{throw console.log(r,e),e}),c=function(r,e){let t=[];return e&&t.push("FILENAME="+e+":"),t.push(r),e&&t.push("[EOF]"),t=t.join("\n"),t}(i,a?void 0:r);a?s.writeFileSync(`${r}.${a}`,c,"utf-8"):console.log(c)};t.dirExists(i)?await t.scan(i,l):l(i,!0)}();
