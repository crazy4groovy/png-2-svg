#!/usr/bin/env node
"use strict";var validateArgs={colors:Number,writeFileWithTag:String};const fs=require("fs");var dir=new function(){this.scan=async function(e,r){if(""===e||"/"===e)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==e.slice(-1)&&(e+="/"),!this.dirExists(e))return;const t=async e=>fs.readdirSync(e).sort().reduce(async(s,o)=>{await s;const n=e+o;return this.dirExists(n)?t(n+"/"):r(n)},Promise.resolve());return t(e)},this.dirExists=function(e){try{return fs.lstatSync(e).isDirectory()}catch(e){return!1}},this.fileExists=function(e){try{return fs.existsSync(e)}catch(e){return!1}}};const SVGO=require("svgo");var svgo=new SVGO({plugins:[{cleanupAttrs:!0},{inlineStyles:!0},{removeDoctype:!0},{removeXMLProcInst:!0},{removeComments:!0},{removeMetadata:!0},{removeTitle:!0},{removeDesc:!0},{removeUselessDefs:!0},{removeXMLNS:!1},{removeEditorsNSData:!0},{removeEmptyAttrs:!0},{removeHiddenElems:!0},{removeEmptyText:!0},{removeEmptyContainers:!0},{removeViewBox:!0},{cleanupEnableBackground:!0},{minifyStyles:!0},{convertStyleToAttrs:!0},{convertColors:!0},{convertPathData:!0},{convertTransform:!0},{removeUnknownsAndDefaults:!0},{removeNonInheritableGroupAttrs:!0},{removeUselessStrokeAndFill:!0},{removeUnusedNS:!0},{prefixIds:!0},{cleanupIDs:!0},{cleanupNumericValues:!0},{cleanupListOfValues:!0},{moveElemsAttrsToGroup:!0},{moveGroupAttrsToElems:!0},{collapseGroups:!0},{removeRasterImages:!0},{mergePaths:!0},{convertShapeToPath:!0},{sortAttrs:!0},{removeDimensions:!0},{removeAttrs:!1},{removeAttributesBySelector:!1},{removeElementsByAttr:!0},{removeOffCanvasPaths:!0},{removeStyleElement:!0},{removeScriptElement:!0},{reusePaths:!0}]});const fs$1=require("fs"),PNGReader=require("png.js"),JPEGReader=require("jpeg-js"),ImageTracer=require("imagetracerjs"),toSvg=ImageTracer.imagedataToSVG;async function getImgData(e){const r=fs$1.readFileSync(e);if(e.endsWith("png")){const e=new PNGReader(r),t=await new Promise((r,t)=>{e.parse((e,s)=>{e?t(e):r(s)})});return{height:t.height,width:t.width,data:t.pixels}}return JPEGReader.decode(r)}async function svgThumbnailer(e,{colors:r=4}={}){const t=await getImgData(e),s=Math.ceil(128/r**2)+1,o={scale:5,ltres:s,qtres:s,colorquantcycles:r,numberofcolors:r};return svgo.optimize(toSvg(t,o))}const fs$2=require("fs");function formatOutput(e,r){let t=[];return r&&t.push("FILENAME="+r+":"),t.push(e),r&&t.push("[EOF]"),t=t.join("\n")}async function main(){const e=process.argv.slice(2),[r,...t]=e;r||console.log("run: svg-thumbnailer {image-path} {options?}");const s=t.reduce((e,r)=>{const[t,s]=r.replace(/^--?/,"").split("=");return validateArgs[t]&&(e[t]=validateArgs[t](s)),e},{}),{writeFileWithTag:o}=s,n=async(e,r)=>{if(!r&&!e.match(/\.(jpe?g|png)$/i))return;const t=formatOutput(await svgThumbnailer(e,s).catch(console.log),o?void 0:e);o?fs$2.writeFileSync(`${e}.${o}`,t,"utf-8"):console.log(t)};dir.dirExists(r)?await dir.scan(r,n):n(r,!0)}main();
