#!/usr/bin/env node
"use strict";var validateArgs={colors:Number,writeFileWithTag:String};const fs=require("fs");var dir=new function(){this.scan=async function(r,e){if(""===r||"/"===r)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==r.slice(-1)&&(r+="/"),!this.dirExists(r))return;const t=async r=>fs.readdirSync(r).sort().reduce(async(s,i)=>{await s;const n=r+i;return this.dirExists(n)?t(n+"/"):e(n)},Promise.resolve());return t(r)},this.dirExists=function(r){try{return fs.lstatSync(r).isDirectory()}catch(r){return!1}},this.fileExists=function(r){try{return fs.existsSync(r)}catch(r){return!1}}};const fs$1=require("fs"),PNGReader=require("png.js"),JPEGReader=require("jpeg-js"),ImageTracer=require("imagetracerjs"),{optimize:optimize}=require("./svgo"),toSvg=ImageTracer.imagedataToSVG;async function getImgData(r){const e=fs$1.readFileSync(r);if(r.endsWith("png")){const r=new PNGReader(e),t=await new Promise((e,t)=>{r.parse((r,s)=>{r?t(r):e(s)})});return{height:t.height,width:t.width,data:t.pixels}}return JPEGReader.decode(e)}async function svgThumbnailer(r,{colors:e=4}={}){const t=await getImgData(r),s=Math.ceil(128/e**2)+1;return optimize(toSvg(t,{scale:5,ltres:s,qtres:s,colorquantcycles:e,numberofcolors:e}))}const fs$2=require("fs");function formatOutput(r,e){let t=[];return e&&t.push("FILENAME="+e+":"),t.push(r),e&&t.push("[EOF]"),t=t.join("\n")}async function main(){const r=process.argv.slice(2),[e,...t]=r;e||console.log("run: svg-thumbnailer {image-path} {options?}");const s=t.reduce((r,e)=>{const[t,s]=e.replace(/^--?/,"").split("=");return validateArgs[t]&&(r[t]=validateArgs[t](s)),r},{}),{writeFileWithTag:i}=s,n=async(r,e)=>{if(!e&&!r.match(/\.(jpe?g|png)$/i))return;const t=formatOutput(await svgThumbnailer(r,s).catch(console.log),i?void 0:r);i?fs$2.writeFileSync(`${r}.${i}`,t,"utf-8"):console.log(t)};dir.dirExists(e)?await dir.scan(e,n):n(e,!0)}main();
