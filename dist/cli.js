#!/usr/bin/env node
"use strict";var validateArgs={clobberFile:r=>"false"!==r,colors:Number,combineLines:r=>"true"===r,scale:Number,smooth:Number,smoothDecimalPlaces:Number,tolerance:Number,vibrant:r=>"false"!==r,writeFileWithTag:String};const fs=require("fs");var dir=new function(){this.scan=async function(r,t){if(""===r||"/"===r)return console.error("Error: directory to scan cannot be empty."),console.error('If you want to scan your script location, please use "dir2array.Scan(__dirname);"'),null;if("/"!==r.slice(-1)&&(r+="/"),!this.dirExists(r))return;const e=async r=>fs.readdirSync(r).sort().reduce(async(s,i)=>{await s;const n=r+i;return this.dirExists(n)?e(n+"/"):t(n)},Promise.resolve());return e(r)},this.dirExists=function(r){try{return fs.lstatSync(r).isDirectory()}catch(r){return!1}},this.fileExists=function(r){try{return fs.existsSync(r)}catch(r){return!1}}};const fs$1=require("fs"),toSvg=require(".");function formatOutput(r,t){let e=[];return t&&e.push("FILENAME="+t+":"),e.push(r),t&&e.push("[EOF]"),e=e.join("\n")}async function main(){const r=process.argv.slice(2),[t,...e]=r;t||console.log("run: svg-thumbnailer {image-path} {options?}");const s=e.reduce((r,t)=>{const[e,s]=t.replace(/^--?/,"").split("=");return validateArgs[e]&&(r[e]=validateArgs[e](s)),r},{}),{writeFileWithTag:i,clobberFile:n}=s,o=async(r,t)=>{if(!t&&!r.match(/\.(jpe?g|png)$/i))return;if(i&&!1===n&&dir.fileExists(`${r}.${i}`))return;const{data:e}=await toSvg(r,s).catch(t=>{throw console.log(r,t),t}),o=formatOutput(e,i?void 0:r);i?fs$1.writeFileSync(`${r}.${i}`,o,"utf-8"):console.log(o)};dir.dirExists(t)?await dir.scan(t,o):o(t,!0)}main();
