"use strict";function line([t,n],[e,o]){const a=e-t,r=o-n;return{length:Math.sqrt(a**2+r**2),angle:Math.atan2(r,a)}}const controlPoint=(t,n,e)=>(o,a,r,c)=>{const i=t(a||o,r||o),l=i.angle+(c?Math.PI:0),s=i.length*Math.min(.3,n),h=10**Math.min(3,e);return[Math.round(o[0]+Math.cos(l)*s*h)/h,Math.round(o[1]+Math.sin(l)*s*h)/h]},bezierCommand=t=>(n,e,o)=>{const[a,r]=t(o[e-1],o[e-2],n),[c,i]=t(n,o[e-1],o[e+1],!0);return[a,r,c,i].every(t=>Math.abs(Math.round(t))>0)?`c ${a},${r} ${c},${i} ${n[0]},${n[1]}`:`l ${n[0]} ${n[1]}`},pointsReducer=t=>(n,e,o,a)=>0===o?`l${e[0]} ${e[1]}`:`${n} ${t(e,o,a)}`,createLine=(t,n)=>t.reduce(pointsReducer(n),""),controlPointCalc=(t,n)=>controlPoint(line,t,n),bezierCommandCalc=(t,n)=>bezierCommand(controlPointCalc(t,n));module.exports=(t=[],{smooth:n=.1,smoothDecimalPlaces:e=1})=>createLine(t,bezierCommandCalc(n,e));
