"use strict";const simplifyjs=require("simplify-js"),bezierSmooth=require("./bezier-smooth");function optimizeLineCmd(e,{tolerance:t,smooth:r}){const o=e.match(/-?\d+ */g),i=o.reduce((e,t,r)=>(r%2==1&&e.push([Number(o[r-1]),Number(o[r])]),e),[]).map(([e,t])=>({x:e,y:t})),n=simplifyjs(i,Math.min(t,3),!0);if(r){const e=n.map(({x:e,y:t})=>[e,t]);return bezierSmooth(e,{smooth:r})}return n.reduce((e,{x:t,y:r})=>e+" "+t+" "+r,"l")}module.exports=function({data:e},{tolerance:t=0,decimalPlaces:r=!0,smooth:o=0}){const i=e.match(/d="([^"]+)"/g),n=i.map(e=>e.substring(3,e.length-1)).map(e=>e.match(/[a-z][^a-z]*/gi));let m="",s=n.map(e=>e.reduce((e,r)=>{const i=r[0];if("l"!==i&&m.length>0){e+=t||o?optimizeLineCmd(m,{tolerance:t,smooth:o}):"l"+m,m=""}return"l"===i?m+=" "+r.substr(1):e+=r,e},""));return r||(s=s.map(e=>{const t=e.match(/-?\d*\.\d/g)||[],r=t.map(e=>{return.5!==Math.abs(e%1)?Math.round(e):e});let o=0;return t.forEach((t,i)=>{const n=e.slice(o);e=e.slice(0,o)+n.replace(String(t),r[i]),o=n.indexOf(t)+String(r[i]).length}),e})),s.reduce((e,t,r)=>e.replace(i[r],`d="${t}"`),e)};
